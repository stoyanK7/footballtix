before_script:
  - cd API/
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x ./gradlew

cache:
  paths:
    - ./API/.gradle/wrapper
    - ./API/.gradle/caches

.stop-docker-containers: &stop-docker-containers
  - sudo docker-compose down

stages:
  - api-build
  - test
  - deploy

api-build:
  stage: api-build
  script:
    - ./gradlew assemble

run-test-docker-containers:
  stage: test
  needs: ["api-build"]
  script:
    - ./gradlew build
    # - docker rm -f $(docker ps -aq)
    - cd ..
    - touch .env
    - echo "REACT_APP_API_ENDPOINT=http://api:8080" >> ./.env
    - sudo docker-compose up --build -d    

api-test:
  stage: test
  needs: ["api-build"]
  script:
    - ./gradlew test

sonarqube-check:
  stage: test
  needs: ["api-build"]
  image: gradle:jre11-slim
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
    GIT_DEPTH: "0"  
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: ./gradlew sonarqube
  allow_failure: true
  only:
    - main 

cypress:
  image: node:latest
  stage: test
  needs: ["run-test-docker-containers"]
  before_script:
    - cd Frontend/
    - sudo docker exec -i db mysql -u root -proot < ./cypress/testdb.sql
    - npm install
  script:
    - npm run cypress

stop-test-docker-containers:
  stage: test
  when: always
  script:
    - <<:*stop-docker-containers

build-production-docker-containers:
  stage: deploy
  needs: ["api-test", "cypress"]
  before_script:
    - cd API/
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./gradlew
    - ./gradlew build
    - cd ..
    - touch .env
    - echo "REACT_APP_API_ENDPOINT=http://20.124.233.164:8080" >> ./.env
  script:
    - sudo docker-compose up --build --no-start 

push-to-dockerhub:
  stage: deploy
  needs: ["build-production-docker-containers"]
  before_script:
    - sudo docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - sudo docker commit frontend stoyank7/footballtix:frontend
    - sudo docker push stoyank7/footballtix:frontend
    - sudo docker commit api stoyank7/footballtix:api
    - sudo docker push stoyank7/footballtix:api
    - sudo docker commit db stoyank7/footballtix:db
    - sudo docker push stoyank7/footballtix:db

deploy-to-production:
  stage: deploy
  needs: ["push-to-dockerhub"]
  script:
    - sudo ssh -i ~/footballtix.pem azureuser@20.124.233.164 "bash start.sh && exit"
