before_script:
  - cd API/
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x ./gradlew

cache:
  paths:
    - ./API/.gradle/wrapper
    - ./API/.gradle/caches

stages:
  - build
  # - test
  # - sonarqube
  - run-docker-containers
  - cypress
  - stop-docker-containers

build:
  stage: build
  script:
    - ./gradlew assemble

# test:
#   stage: test
#   script:
#     - ./gradlew test

# sonarqube-check:
#   stage: sonarqube
#   image: gradle:jre11-slim
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
#     GIT_DEPTH: "0"  
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: ./gradlew sonarqube
#   allow_failure: true
#   only:
#     - main 

run-docker-containers:
  stage: run-docker-containers
  needs: ["build"]
  script:
    - ./gradlew build
    - pwd
    - ls
    # - docker rm -f $(docker ps -aq)
    - docker-compose up --build -d

cypress:
  image: node:latest
  stage: cypress
  needs: ["run-docker-containers"]
  before_script:
    - cd ../Frontend
    - npm install
  script:
    - npm run cypress

stop-docker-containers:
  stage: stop-docker-containers
  needs: ["cypress"]
  script:
    - docker-compose down

#deploy to dockerhub