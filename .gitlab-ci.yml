before_script:
  - cd API/
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - chmod +x ./gradlew

cache:
  paths:
    - ./API/.gradle/wrapper
    - ./API/.gradle/caches

stages:
  - api-build
  - run-docker-containers
  - test
  - stop-docker-containers

api-build:
  stage: api-build
  script:
    - ./gradlew assemble

run-docker-containers:
  stage: run-docker-containers
  needs: ["api-build"]
  script:
    - ./gradlew build
    # - docker rm -f $(docker ps -aq)
    - docker-compose up --build -d    

api-test:
  stage: test
  needs: ["api-build"]
  script:
    - ./gradlew test

sonarqube-check:
  stage: test
  needs: ["api-build"]
  image: gradle:jre11-slim
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
    GIT_DEPTH: "0"  
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: ./gradlew sonarqube
  allow_failure: true
  only:
    - main 

cypress:
  image: node:latest
  stage: test
  needs: ["run-docker-containers"]
  before_script:
    - cd Frontend/
    - pwd
    - docker exec footballtix_db_1 /bin/sh -c 'mysql -u root -p root footballtix < $(pwd)/cypress/testdb.sql'
    - npm install
  script:
    - npm run cypress

stop-docker-containers:
  stage: stop-docker-containers
  when: always
  script:
    - docker-compose down

#deploy to dockerhub